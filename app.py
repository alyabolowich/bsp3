import psycopg2import psycopg2.extrasimport flaskfrom flask import request, jsonify, Flaskcon = psycopg2.connect("dbname=bsp3 user=postgres password=5555")cur = con.cursor(cursor_factory=psycopg2.extras.DictCursor)# could be replaced by # record = [dict(row) for row in cur.fetchall()]# =============================================================================# app = flask.Flask(__name__)# app.config["DEBUG"] = True# # regions = cur.execute("SELECT * from agricultureco2")# rows    = cur.fetchall()# print(rows)# # @app.route('/', methods=['GET'])# # def home():#     return jsonify(regions)# # app.run()# # =============================================================================app = flask.Flask(__name__)app.config["DEBUG"] = True    # Select all from agricultureco2@app.route('/')def home():    cur.execute("SELECT * from agricultureco2")    record = cur.fetchall()    record = [dict(row) for row in record]    return jsonify(record)# @app.route('/region/<region_id>')def region(region_id): ## could be good to do for YEARS    #region_id = request.args.get('id')    cur.execute("SELECT * from region WHERE region = '{}'".format(region_id))    record = cur.fetchone()    #record = [dict(row) for row in record]    return jsonify(record)# =============================================================================# #Intended output# [ {"country_from:"LU", "country_to":"DE", "amount":42}, ... ]# # for row in cursor.fetchall():# ...     results.append(dict(zip(columns, row)))# # columns = [column[0] for column in cursor.description]# # =============================================================================app.run()